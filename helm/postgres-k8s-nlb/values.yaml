# Default values for postgres-k8s-nlb
# This creates a PostgreSQL deployment with a Service that automatically creates an NLB

# Global values that can be overridden by Omnistrate
global:
  kubernetesClusterID: "omnistrate-cluster"

postgresql:
  password: "changeme"
  database: "postgres"
  username: "postgres"
  
storage:
  size: "10Gi"
  storageClass: "gp3"

service:
  # Enable Private Link via Kubernetes-managed NLB
  enablePrivateLink: true
  port: 5432
  # The AWS Load Balancer Controller will create NLB based on these annotations
  nlbAnnotations:
    # Core NLB creation annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    
    # Security and networking
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    
    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "5432"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "6"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    
    # Target group attributes
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: "preserve_client_ip.enabled=true,deregistration_delay.timeout_seconds=300"
    
    # Security groups managed by controller
    service.beta.kubernetes.io/aws-load-balancer-manage-backend-security-group-rules: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-security-group-ports: "5432"

# Resource limits and requests
resources:
  requests:
    memory: "256Mi"
    cpu: "250m"
  limits:
    memory: "1Gi"
    cpu: "500m"

# Pod security context
securityContext:
  runAsUser: 999
  runAsGroup: 999
  fsGroup: 999

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

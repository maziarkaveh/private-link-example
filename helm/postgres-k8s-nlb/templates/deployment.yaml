apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres-k8s-nlb.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "postgres-k8s-nlb.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres-k8s-nlb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres-k8s-nlb.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgres-k8s-nlb.fullname" . }}-secret
                  key: postgres-password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            tcpSocket:
              port: postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.username }} -d {{ .Values.postgresql.database }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ include "postgres-k8s-nlb.fullname" . }}-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "postgres-k8s-nlb.fullname" . }}-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "postgres-k8s-nlb.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.storage.size }}
  {{- if .Values.storage.storageClass }}
  storageClassName: {{ .Values.storage.storageClass }}
  {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgres-k8s-nlb.fullname" . }}-secret
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "postgres-k8s-nlb.labels" . | nindent 4 }}
type: Opaque
data:
  postgres-password: {{ .Values.postgresql.password | b64enc | quote }}
